name: Test for SSL vulnerabilities against hosts
run-name: Test for SSL vulnerabilities using ${{ inputs.sourcedata }}
on:
  workflow_dispatch:
    inputs:
      sourcedata:
        description: "What is the source variable of data containing the list of hosts to scan?"
        default: "scansslhosts_csv"
        required: true
        type: choice
        options:
          - "scansslhosts_csv"
          - "scansslhosts_multiline"
          - "scansslhosts_singlehost"
          - "scansslhosts_singleip"
      singlehost:
        description: "If scansslhosts_singlehost, what single hostname should we scan?"
        required: false
        type: string
      singleip:
        description: "If scansslhosts_singleip, what IP address should we scan?"
        required: false
        type: string
  workflow_call:
    secrets:
      token:
        required: false
jobs:
  scan_ssl_hosts:
    runs-on: ubuntu-latest
    name: Execute ssl vulnerability scan against hosts
    steps:
      - name: Checkout repository
        id: checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Test execution of testssl.sh
        id: testssl-trial
        env:
          SOURCEDATA: ${{ github.event.inputs.sourcedata }}
          SINGLEHOST: ${{ github.event.inputs.singlehost }}
          SINGLEIP: ${{ github.event.inputs.singleip }}
        run: |
          cd testssl.sh || exit
          echo "Source data is ${SOURCEDATA}"
          if [[ ${SOURCEDATA} == "scansslhosts_csv" ]]; then
            echo "Pulling list of hosts from scansslhosts_csv env variable, in csv format"
          elif [[ ${SOURCEDATA} == "scansslhosts_multiline" ]]; then
            echo "Pulling list of hosts from scansslhosts_multiline env variable, in multi-line format"
          elif [[ ${SOURCEDATA} == "scansslhosts_singlehost" ]]; then
            if [[ ! -z ${SINGLEHOST} ]]; then
              echo "Will scan ${SINGLEHOST} for vulnerabilities"
              ./testssl.sh -U --ip one  "${SINGLEHOST}":443 | tee /tmp/testssl.out
              cat /tmp/testssl.out | sed 's/\x1b\[[0-9;]*m//g')" >> $GITHUB_STEP_SUMMARY
            else
              echo "Warning, you specified scansslhosts_singlehost but did not specify anything in singlehost parameter" >> $GITHUB_STEP_SUMMARY
              exit 1
            fi
          elif [[ ${SOURCEDATA} == "scansslhosts_singleip" ]]; then
            if [[ ! -z ${SINGLEIP} ]]; then
              echo "Will scan ${SINGLEIP} for vulnerabilities"
              ./testssl.sh -U --ip "${SINGLEIP}" "${SINGLEIP}:443" > /tmp/testssl.out 2>&1
              cat /tmp/testssl.out
              cat /tmp/testssl.out | sed 's/\x1b\[[0-9;]*m//g')" >> $GITHUB_STEP_SUMMARY
            else
              echo "Warning, you specified scansslhosts_singleip but did not specify the IP address in the singleip parameter" >> $GITHUB_STEP_SUMMARY
              exit 1
            fi
          fi
